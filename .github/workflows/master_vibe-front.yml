# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - Vibe-Front

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install and build
        run: |
          npm install --legacy-peer-deps
          CI=false npm run build

      - name: Create release artifact
        run: |
          mkdir release
          cp -R build ./release
          cp package.json ./release
          cp package-lock.json ./release

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./release # <-- Aponta para a pasta que acabamos de criar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A1C4DE1EC0D841FF9DBAB64C751B687B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F9B90CE593334868AFB9079547391D6E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A4D14490B0B14B6ABDBA40FE481BC814 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Vibe-Front'
          slot-name: 'Production'
          package: . # <-- 'package: .' estÃ¡ correto, pois ele usa o artefato baixado
