name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      
      # 1. Configura a versão do Node.js
      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '22.x' # Defina a versão que você usa

      # 2. Instala dependências e executa o Build do React
      - name: Install dependencies and run build
        run: |
          npm install --legacy-peer-deps
          # Adiciona CI=false para evitar que os warnings do ESLint quebrem o build
          CI=false npm run build 

      # 3. Deploy para o Static Web App (usa a pasta 'build' que foi gerada acima)
      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_SKY_0966C640F }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/" 
          api_location: ""
          output_location: "build" # Garante que ele procure a pasta 'build'
          
  # ---
          
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_SKY_0966C640F }}
          action: "close"
